#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: xmlstarlet-rpm:create-build-jobs: "Create the Jenkins job(s) for the XMLStarlet RPM build process"
#/ usage: rerun xmlstarlet-rpm:create-build-jobs [ --jenkins-url <http://${HOSTNAME}:8080>] 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh create-build-jobs || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: xmlstarlet-rpm:create-build-jobs. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: JENKINS_URL

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -

# Setup the Jenkins URL as a GitHub web hook on the repository:
rerun github:create-web-hook --replace true --owner dtolabs --repository xmlstarlet-rpm --web-hook-url  "${JENKINS_URL}/git/notifyCommit?url=git://github.com/dtolabs/xmlstarlet-rpm.git&branches=master"

# Create the Jenkins job(s) included with the module.
for FILE in $(ls -d $RERUN_MODULE_DIR/jobs/*/config.xml)
do
  JOBNAME=$(basename $(dirname $FILE))
  rerun jenkins:create-job --jenkins-url ${JENKINS_URL} --jobname $JOBNAME --file $FILE
done

# Done. Exit with last command exit status.
exit $?
